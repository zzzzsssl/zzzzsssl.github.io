{"posts":[{"title":"A Plague Tale:Requiem_In-game photography","text":"","link":"/2023/12/01/A-Plague-Tale-Requiem-In-game-photography/"},{"title":"HongKong-香港街头摄影","text":"前言最近去香港游玩，主要在新界和九龙附近，被香港街景所吸引，也打卡了很多港片里面出现的场景和地标，感受到香港不一样的风土人情，故用相机拍了不少照片，分享一下😀 摄影器材：Canon ESO 6D 镜头：50mm","link":"/2023/03/10/HongKong-%E9%A6%99%E6%B8%AF%E8%A1%97%E5%A4%B4%E6%91%84%E5%BD%B1/"},{"title":"Technically Art: Issue 2 (2023.04.01)","text":"I'll be giving a talk at #GDC on @Naughty_Dog's post system, used for picking good spots in the game world for AI &amp; gameplay purposes (kind of like Unreal's EQS if you're familiar with that). #GDC2023 #GameDev pic.twitter.com/a3hY0bOLfS&mdash; Ming-Lun “Allen” Chou (@TheAllenChou) March 4, 2023 #つぶやきGLSLfloat e,i,a,w,x,g;for(;i++&lt;1e2;){vec3 p=vec3((FC.xy-.5*r)/r.y*g,g-3.);p.zy*=rotate2D(.6);i&lt;1e2?p:p+=1e-4;e=p.y;for(a=.8;a&gt;.003;a*=.8)p.xz*=rotate2D(5.),x=(++p.x+p.z)/a+t+t,w=exp(sin(x)-2.5)*a,o.gb+=w/4e2,p.xz-=w*cos(x),e-=w;g+=e;}o+=min(e*e*4e6,1./g)+g*g/2e2; pic.twitter.com/dJaHL7WjeY&mdash; yonatan (@zozuar) March 4, 2023 マテリアルのお勉強。いい感じだけど、まだいまいちDotの使い方は把握していない.... pic.twitter.com/Dt2TsN0JhI&mdash; YukiYa 🇯🇵→🇨🇦 soon (@ko_yuki_lo) March 5, 2023 Are you creating a platform game? Here's an example of procedural water + player interaction you can use as a reference! Want to learn about #unity2d #shader ?🌊Get our book here,https://t.co/KfSpLg2QSU#madewithunity #indiedev #gamedev #gameart #procedural #realtimeVFX pic.twitter.com/dRAxtu2MmX&mdash; The Unity Shaders Bible (@ushadersbible) March 6, 2023 I tried creating a proof-of-concept implementation of a ChatGPT-powered shader generator for Unity.https://t.co/HQp7oqLAvC pic.twitter.com/O1o1H1910g&mdash; Keijiro Takahashi (@_kzr) March 6, 2023 .@boredblndrartst presented a neat Blender-made procedural material that mimics the physical characteristics of an LED display when captured on camera.Learn more and purchase for $1: https://t.co/Kx7ixLEepZ#blender3d #b3d #3dart #proceduralart pic.twitter.com/g99s0VkHFA&mdash; 80 LEVEL (@80Level) March 8, 2023 Here are a few examples of the different types of decal materials I created using @Substance3D on the production of #TheLastOfUs. These textures were quite handy to add damages on concrete edges or broken wood pieces.More breakdown on @ArtStationHQ: https://t.co/RTE8jZpZN6 pic.twitter.com/OxGlaSHSYv&mdash; Jonathan BENAINOUS (@JonathanBenaino) March 8, 2023 Excited to announce that I'll be presenting at #GDC2023 on joint-based skin deformation in #GodOfWarRagnarok. Join me to learn about our systematic rig and dynamic bone technique for achieving realistic muscle and skin jiggle effects. #gamedev #animationhttps://t.co/mmMyy1VmrR pic.twitter.com/zdsvpZX6ML&mdash; Tenghao Wang (@tenghao_wang) March 6, 2023 The splash art shader I made for Tomb Raider Reloaded. It uses some edge detection and gradient maps to create the sketchy look. It transitions from all white, to pencil work, values, then the final render.#VFX #MadeWithUnity #realtimeVFX pic.twitter.com/Sz0CrNGsVT&mdash; Gregory Oliveira (@godsgreg) March 9, 2023 🪡 little sewing scene I made in Blender a while back, looking at it now I probably went overboard with the fuzz on the leather but oh well 😅#b3d #3D pic.twitter.com/xsNfCKvZiO&mdash; Sabrina Garcia (@sab_3d) March 9, 2023 I saw this Rain shader ( https://t.co/kd37GLlQxp ) and I loved it! 😍I ported to HLSL and to #UnrealEngine nodes too. Best part it works with anything, over other materials, postprocess raining on camera, skeletal mesh with material overlay.--(source code 🧵👇) pic.twitter.com/br9CxN4CAP&mdash; DarknessFX (@DrkFX) March 10, 2023 We are proud to introduce Wonder Studio.An AI tool that automatically animates, lights and composes CG characters into a live-action scene. No complicated 3D software, no expensive production hardware—all you need is a camera.Sign up for closed beta at https://t.co/QPyOVMjEAy pic.twitter.com/aHf2bLTsgZ&mdash; Wonder Dynamics (@WonderDynamics) March 9, 2023 TIL learned you can load map data right into Houdini. that is so neat 🤓 pic.twitter.com/IgkYI0Ra9I&mdash; Ben Voldman (@benvoldman) February 27, 2023 Made a huge tutorial on how to make a water shader in Unity 💦 This took a while to make and I put in almost everything I know about stylized water shaders. #madewithunity pic.twitter.com/hZV34BxqIA&mdash; Alex Ameye (@alexanderameye) March 9, 2023 📝Just a reminder of the importance of taking a few minutes to create helpers and tools to make our lives easier when animating. #c4d #3d #animation #motion #tricks I hope to finish this personal project before a new gig shows up. pic.twitter.com/xwMYoYaLDg&mdash; Victor V. (@vic_ver) March 9, 2023 Broken glass I made some years ago in #substance3ddesigner pic.twitter.com/0zBVeVMqaH&mdash; Jaakko Saari (@crwjaakko) March 13, 2023 Daryll Española shared the workflow behind the Dark Liquid Burst project, explained how to create liquid-like shading, and showed how the explosions were made with Niagara:https://t.co/uBdF3fbwnV#vfx #visualeffects #unrealengine5 #ue5 #unrealengine #niagara @UnrealEngine pic.twitter.com/IXdGhfbHzS&mdash; 80 LEVEL (@80Level) March 14, 2023 i've been painting and putting together this little pixel 3d worldit's not a game yet.. (but RT if you'd play it 😇)#indiedev #screenshotsaturday pic.twitter.com/YAyfdYv2AW&mdash; thomas ⛰ vandenberg (🔜 PAX East) (@noio_games) March 14, 2023 Mountains in &lt;1 min? Added a new #Gaea preset to @sidefxlabs 19.5.556+ that directly creates a sexy mountain using just a default #Houdini HeightField as input. @quadspinner @daxpandhi #ProceduralArt #TechArt #3D #gamedev #indiedev #UE #UE5 #unity3d A few quick tips below... pic.twitter.com/HMhi6ovu4A&mdash; Mai Ao (@aomai01) March 16, 2023 A small #kaiju exercise...err...big kaiju exercise? 🤔 or a gorilla cat 🤷‍♂️Super fun Lac Beast #animation rig from @KielFiggins! pic.twitter.com/wLspzLQbzY&mdash; Shawn Wilson (@jitterbot) March 21, 2023 The new PCG Tools looks amazing. I love this stuff, can't wait to learn more about it.I've been working with procedural tools for world building for the last 5-6 years.and it's really nice to see more of this stuff being developed &lt;3#UnrealEngine #UE5 #PCG pic.twitter.com/O4qdBiyBBR&mdash; Chris Radsby (@chrisradsby) March 23, 2023 Weird things going on in the capture that I can't figure out. I was really happy with how the balconies and windows turned out. Some fun accidents. pic.twitter.com/LpbU7Kl4X2&mdash; Paul Svoboda (@paulsvoboda) March 28, 2023 Prototyping surface rain effects directly in Niagara, using Grid2D. Fully parameter driven - no textures used and hence there is no visible repetition. The final result is just a normap map.What do you think? Worth it?#UE5 #rain #shaders #vfx pic.twitter.com/GiTteWa21r&mdash; Dmitry Karpukhin (@skx_doom) March 30, 2023 Lighting exercise with Unreal Engine 5 🌟#EldenRing #EldenRingFanart #UnrealEngine #UnrealEngine5 pic.twitter.com/uJ4V8TZ8yd&mdash; Eugenia.Lysa (@JaneLysa911) March 30, 2023 すごいチュートリアルがでてきた勉強させてもらおうhttps://t.co/LpGJNvmiGW&mdash; ポジTA (@posita33) March 31, 2023 个人微信公众号： CG VisionTube 注：学习交流使用！","link":"/2023/04/01/Technically-Art-Issue-2-2023-04-01/"},{"title":"Technically Art: Issue 1 (03.03.2023)","text":"I made a better version of the texture bombing function, while also making it cheaper, and higher quality.#UnrealEngine pic.twitter.com/SU9dVsFU4l&mdash; Kristóf Lovas (@TheKristofLovas) February 2, 2023 An audience favourite:Triplanar rocks &amp; moss(aka. “I don’t want to open zbrush” rocks) pic.twitter.com/vlhRv9Lt9K&mdash; Nina Klos 🐟 (@nina_m_klos) February 4, 2023 テクスチャを使わない円形のゲージマテリアル。仮置き版のゲームUIの1つとして使えるかも。Circle gauge ui material without texture in UE5.1.An improved version of a similar material I created a last year.It may be used as one of the temporary UIs.#UE5Study pic.twitter.com/e04kx2zgMN&mdash; くろれきし (@endwar1338) February 6, 2023 Face~🥳#unity #realtime #shader #gamedev pic.twitter.com/EUif8S6l5o&mdash; Sakura Rabbit 樱花兔 (@Sakura_Rabbiter) February 7, 2023 Updated streams shader to create waves! pic.twitter.com/KY2DYoq8UA&mdash; HiWarp (@HiWarp) February 6, 2023 You can definitely do some fun (and satisfying) things with Houdini X Unreal Engine (WIP)#UE5 #UE5Study #unrealengine #VFX #RealtimeVFX #Niagara #indiedev #indiegame #shader #Houdini #エフェクト pic.twitter.com/GIuLedccqO&mdash; Nae ナエ ＞VFXの就職活動中 (@NaerlyNona) February 13, 2023 3D Artist HyeungKun Park shared a comprehensive breakdown explaining how to set up a non-photorealistic Genshin Impact-style shader using Substance 3D Designer and Unreal Engine 5.Link: https://t.co/Lhm7GZCBvR#substance3ddesigner #unrealengine #UE5 #GenshinImpact #3dart pic.twitter.com/Ulh02aXTxk&mdash; 80 LEVEL (@80Level) February 15, 2023 Put my ink cat into game！😝😝😝#blender #unity #c4d #game #npr#animalcontroller pic.twitter.com/BJqr0Usdfs&mdash; 五天晴 (@wutianqing_) February 15, 2023 A quite useful Shader that can also interact with water, sand, paint and more! Learn how to create it: https://t.co/QsmyUdVYNU#VFX #visualeffect #effects #gamedev #madewithunity #vfxtutorial #RealtimeVFX #VFXGraph #vfxArtist #indiedev #Unity #unity3d #VFXFriday #vfxbreakdown pic.twitter.com/Wd8C60OaWf&mdash; Gabriel Aguiar Prod. (@GabrielAguiarFX) February 17, 2023 sticky cotton test #houdini #vellum #redshift pic.twitter.com/6jMrQczx6U&mdash; Jose_L_Molfino (@Jose_Molfino) January 26, 2023 &quot;The Unreal Stencil Dragon&quot; is online!🎉 It's a project I made for a class I gave for @SAEInstituteAUS and @EnjminC.🛠 Breakdown: https://t.co/UTb378mszp💾Project Files: https://t.co/EzOAYNE0zL📑WIP Thread: https://t.co/LnRyc8ez10#realtimevfx #unrealEngine #gamedev #vfx pic.twitter.com/r6D4kqENfR&mdash; Simonschreibt (@simonschreibt) February 20, 2023 Love, Death + Robots – Volume 3 VFX Breakdown by Rodeo FXLove, Death &amp; Robots is an adult animated anthology streaming television series created by Tim Miller and streaming on Netflix.Checkout VFX Breakdown: https://t.co/fsVt31yG9y#vfxexpress #vfxbreakdown #vfxshot pic.twitter.com/tum8l2AiUv&mdash; Vfxexpress (@vfxexpress) February 20, 2023 Portanto, este é o vídeo de teste de ultra renderização, do Rockstar Advanced Game Engine - 9a versão, na água do GTA 6, que recebemos há algum tempo. pic.twitter.com/SMZTY11w0M&mdash; Matheusvictorbr- (@Matheusbr9895_) February 17, 2023 Daily #Blender Tip: It’s fun to take photographs of interesting looking textures and turn them into materials. In this video we look at making photographs seamlessly tiling so you can use them on your models. #B3D More tips &amp; free sample PDF: https://t.co/4q3NW3MNxj pic.twitter.com/mJ5PYrCyvT&mdash; Jan van den Hemel (@JanvandenHemel) February 24, 2023 Hey, feel free to download the FREE Unity Shaders Bible book sample! 🎁⭐️More info https://t.co/KfSpLg2QSU#madewithunity #unity3d #unity2d #indiedev #gameassets #gamedev #gameart #procedural #shader #realtimeVFX #tutorial pic.twitter.com/OVJ3LB03x2&mdash; The Unity Shaders Bible (@ushadersbible) February 25, 2023 今日の作品#UE5Study #Shader #material #UMG pic.twitter.com/VXID4VhRkm&mdash; YukiYa (@ko_yuki_lo) February 25, 2023 I remember when I finished the anim system for TLOU2 combat doors, I thought “Maybe much. But it’s all done now. We have it and we gonna reuse it forever. Cause like what more one can possibly desire from this damned door? Right?“.Oh boyWAS. I. WRONG. pic.twitter.com/iAA4qrZVjg&mdash; Maksym Zhuravlov (@MaksZhuravlov) February 26, 2023 Delightful environment art piece with #Houdini by one of #SideFXLabs' former interns @asperslaga who currently works for one of Xbox Game Studios. https://t.co/kHpGvfWPc0Concept from Noah Carev.#gamedev #3D #indiedev #realtimeVFX #UE #UE5 #Substance3DDesigner #b3d #zbrush pic.twitter.com/dBdJyjP0HG&mdash; SideFX Labs (@sidefxlabs) February 25, 2023 text effect wip, connected strokes are separated by roughly tracing then imported as collections pic.twitter.com/QokIjV6jpQ&mdash; celestialmaze (@cmzw_) February 26, 2023 Procedural stylized sky and clouds in one skybox shader with ASE! ⛅️ #madewithunity #indiedev #unity3d #AmplifyShaderEditor pic.twitter.com/wJMO6T7RAu&mdash; MetallCore999 (@MetallCore999) February 22, 2023 Created a plug-in to export masks from selected layers in Substance Painter. Download here: https://t.co/kdI94CkYPE #Substance3DPainter @Substance3D pic.twitter.com/4UNY4ki8JT&mdash; Wes McDermott (@The3DNinja) February 22, 2023 Here comes the Magical GUUUN !!! 💖💥I wanted to learn VFX, Animation and character modeling for FPS games. There was a lot of constraint to manage but it was a really cool and fun exercise 👀Artstation : https://t.co/JXaEc3YBhg#UnrealEngine #VFX #gamedev #gameart pic.twitter.com/Ik0j0MJIXx&mdash; Julien Delaunay (@JulienDelauna19) February 27, 2023 Created this concept of grass for fun and it actually inspired me to experiment with grass effects more. Stay tuned for the results! 😎#gamedev #gameart #indiedev #madewithunity pic.twitter.com/2MiekygG1V&mdash; Maciej Hernik (@Throwdrow) February 26, 2023 个人微信公众号： CG VisionTube 注：学习交流使用！","link":"/2023/03/03/Technically-Art-Issue-1-04-03-2023/"},{"title":"Technically Art: Issue 3 (2023.04.30)","text":"Some improvements on my simple water system. It feels good playing with it straight in the editor pic.twitter.com/GyItJtzRI7&mdash; VMontyᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠᅠVMonty (@VMonty) April 2, 2023 Trying out Niagara Fluids now for the sim on top of my post from yesterday! Its a good start I think. Endless tweaking now.Its a 512 texture, cost is 1ms, not too bad at all! Hoping to blend in the node colors at some point.#VFX #ScreenshotSaturday #Gamedev #UnrealEngine pic.twitter.com/5TDGmaiW1n&mdash; chriszuko Wishlist Mix Universe (@ChrisZukoArt) April 1, 2023 The new Scriptable Tools Editor Mode in @UnrealEngine 5.2 is really, really cool. It's a framework to easily create new drag/click/widget based tools! Can't wait to see what folks do with it. Here I made a simple Vine Painter tool to drop Vine Blueprints into the scene. #UETips pic.twitter.com/9ZNY5s7mpJ&mdash; Chris Murphy (@HighlySpammable) April 2, 2023 Daily #Blender Tip: Using some hidden but powerful functionality in the Pose Brush in Sculpt Mode, we can create amazing looking folds in our sculpt with almost no effort. #B3D Get my ebook: https://t.co/q7hiP3viLw pic.twitter.com/um70gd9NIO&mdash; Jan van den Hemel (@JanvandenHemel) April 6, 2023 float2 n,q,u=float2(i.uv-.5);float d = dot(u,u),s=9,t=_Time.y,o,j;for (float2x2 m=RM2D(5);j++&lt;16;) { u = mul(m,u);n = mul(m,n); q = u*s+t*4+sin(t*4-d*6)*0.8+j+n; o += dot(cos(q)/s, float2(2,2)); n -= sin(q); s *= 1.2;} return o;#Unity3D #GLSL #VFXFriday pic.twitter.com/Ci3g4tayu4&mdash; Mirza Beig (@TheMirzaBeig) April 7, 2023 This is an update of my river sim in houdini using mantra. Things to improve as WW and add trextures to rocks. Need to get used to USD workflow, too. #Houdini #VFX #mantra #cgi pic.twitter.com/dXjKUxltxi&mdash; Jhonatan (@GudielVFX) April 8, 2023 Physically-aware audio is incredibly important for immersive #VR experiences, but often overlooked. It can make the difference between interacting with shapes and interacting with a place.#gamedev #indiedev #unity3d #madewithunity pic.twitter.com/wiIbbgHONy&mdash; Zi (@MajorMcDoom) April 6, 2023 Some interactive foliage I was messing around with a while ago. So satisfying getting this to work. Might take this a bit further #Unrealengine5 #gamedev #gameart @polycount @UnrealEngine pic.twitter.com/SmTOR9NFXk&mdash; Max (@MaxMakesGames) April 10, 2023 Graphics Programming weekly - Issue 282 - April 9th, 2023 https://t.co/MQQqyaWPV0 pic.twitter.com/1XAcrqD1Sf&mdash; jendrik illner (@jendrikillner) April 12, 2023 I worked on this shader last year, but never posted the project. This morning i was asked how i did my skin-shaders in Unreal Engine, and i decided to make a breakdown and put a bow on this project. So here is a quick thread on how you can do skin shaders in Unreal Engine 🧵 pic.twitter.com/11WteCQ3oo&mdash; Helena Hansen (@HelenaEHHansen) April 4, 2023 I need help: say I have a plugin that lets you render millions of cubic voxels in Unreal super fastIt can run on integrated graphics, can support opaque, shaded, translucent voxelsWould you have a use for that, and if yes what?1/6#UE5 #voxel #gamedev #indiedev pic.twitter.com/96K0BIqpzA&mdash; Victor Careil (@phyronnaz) April 12, 2023 15 years of passion, force of will, joy, blood and tears chasing photorealism. Relentlessly pursuing building a studio in my beloved hometown, Zaragoza. Uniting the most incredible team I could have dream of. All that, resulted in our character rendering art talk. Beyond… pic.twitter.com/EaycCLxK1w&mdash; Jorge Jimenez (@iryoku1) April 14, 2023 Here are the slides for my GDC talk. Let me know if there are any issues with the link.&quot;Approaching Technical Art Techniques Unconventionally Using Unreal Engine's Niagara&quot;https://t.co/oAxwgiti6b pic.twitter.com/0QSNXR8505&mdash; Daniel Elliott (@danielelliott3d) April 15, 2023 Distance-based tessellation. 📐🫧#unity3d #gamedev #screenshotsaturday pic.twitter.com/Mn4Jo5KSQd&mdash; Mirza Beig (@TheMirzaBeig) April 15, 2023 Yooo I'm super stoked to see that my #GDC talk this year is among the free content on GDC Vault! If you missed my talk and are interested in picking good spots for gameplay purposes effectively and efficiently, you can watch my talk here for free! https://t.co/3Up9T2ypC8 #GameDev pic.twitter.com/49na7F9VJ7&mdash; Ming-Lun “Allen” Chou (@TheAllenChou) April 14, 2023 Finished up a write up of this dark and stormy skybox shader! https://t.co/Lcrd9x4xcc #vfx #Unity3D #madewithunity #substancedesigner #gamedev #indiedev #gameart #shaders #clouds #tutorial #art #digitalart pic.twitter.com/xlHbvvEgUU&mdash; Mike V (@RealtimeVFXMike) July 9, 2018 #UnityTips: ✨ Capsule/Line | #Unity3D 💊float W = 0.2, L = 0.5;float W2=W*L/2.,L2=L-(W2*2.),h,lineSDF,line;vec2 uv=(FC.xy-.5*r)/r.y,s=vec2(0,-L2/2.),e=vec2(0,L2/2.),p1=uv-s,p2=e-s;h=clamp(dot(p1,p2)/dot(p2,p2),0.,1.);lineSDF=length(p1-p2*h)-W2;line=step(lineSDF,0.); pic.twitter.com/5Tf19QzrIA&mdash; Mirza Beig (@TheMirzaBeig) April 18, 2023 My #gdc2023 talk on joint-based muscle deformation is now available on Vault! If you missed it live, now's your chance to learn more about this rigging technique at https://t.co/i8gwQPiPBZ #gameanimation #gamedev #gameindustry&quot; pic.twitter.com/DSsETArozE&mdash; Tenghao Wang (@tenghao_wang) April 19, 2023 Fixed it:https://t.co/Yjn7exYoqs https://t.co/753oM3YHOR pic.twitter.com/We30f5LJZa&mdash; Ryan DowlingSoka (@RyanDowlingSoka) April 20, 2023 First early gameplay trailer for “UNRECORD”, the bodycam FPS. Wishlist on steam now!@unrecordgame pic.twitter.com/gVa7q0YOGu&mdash; Alexandre Spindler (@esankiy) April 19, 2023 Keep thinking about this rig I've done for Leikir Studio and make some cool animation with it, maybe with a new mesh 🙂Done in 3ds max.Cancelled project by Leikir Studio.#animation3d #3danimation #3dsmax #animation #game #dragon pic.twitter.com/RQgflRSYyK&mdash; Arthur Munoz (@MunozArthur1) April 18, 2023 I didn't know I can make fake soft body like this so easily with Niagara#UE5 #Niagara pic.twitter.com/qfzbQb0K0z&mdash; HeyYo (@yo_hanashima) April 22, 2023 I made a FluidNinjaLIVE + Oceanology integration plugin for water effects.Thanks to #Oceanology @FluidNinjaLIVE If you need some cool water effects for your projects, I've made it available for anyone with the plugins here: https://t.co/0VLobAooCY..#UE5 #VFX #gamedev pic.twitter.com/dhuTQflF3j&mdash; lazanja_tech (@lazanja_tech) April 22, 2023 Some time ago, I created an interactive water shader using Shader Graph with Unity. If anyone is interested, I explain the process in this video:https://t.co/KAuPmOqkseThis video has English captions available, in case you need to turn them on. :)#madewithunity #indiedev pic.twitter.com/xqVpidenhZ&mdash; Dervish (@_Dervishh) April 19, 2023 個人的にはこの終わりの無さそうな本を地味に書いていたい去年から定期的に数学が分からなくて泣きそうできた時にカチッとハマった時の動きは嬉しいので数学と物理はやり直したいhttps://t.co/W90RralHhs&mdash; ポジTA (@posita33) April 24, 2023 Attempt to rig liquid with #controlrig :3 pic.twitter.com/MdlYT920vs&mdash; rigstation (@rigstation) April 22, 2023 Since Unrecord, the realistic Bodycam game was announced, a lot of people requested a tutorial on the Bodycam effect.So I made an easy-to-follow tutorial in Unreal Engine 5, check it out!#unrealengine #unrealengine5 #gamedev #indiedev #Unrecord pic.twitter.com/4Xyopwrn8U&mdash; Gorka Games (@GorkaGames) April 22, 2023 このページWebでめっちゃ水してて面白いすごい！https://t.co/PybHiCRFdA pic.twitter.com/ZZzlkAPJXH&mdash; ポジTA (@posita33) April 25, 2023 Finally got some time to clean up the #Niagara procedural mesh plugin.https://t.co/rb15NUcocbIt's not a step by step guide, but hopefully good enough to get started :p#UE5&mdash; Amit Mehar (@amu_mhr) April 24, 2023 Well this is a pleasant surprise! @EpicGames has released an invaluable UI Material Lab collection over on the #UnrealEngine marketplace.With 40 Material Functions and over 100 usage examples, this is an amazing resource!https://t.co/0Xc49etlbr#ui&mdash; Unreal Directive (@UnrealDirective) April 27, 2023 Yeah! Proof of concept. 36 waves all calculated only in materials for visuals and in Niagara with HLSL to sample 4 buoyancy points for the ship and applying forces in a BP component using the export particle data interface. Tho something is still a bit off. #ScreenshoSaturday pic.twitter.com/tJSapIKZQT&mdash; Andreas⛵ (@AndiDev_) April 29, 2023 个人微信公众号： CG VisionTube 注：学习交流使用！","link":"/2023/04/30/Technically-Art-Issue-3/"},{"title":"Technically Art: Issue 6 (2023.08.01-2023.08.31)","text":"⭐FREE WATER MATERIAL⭐As I said, here it is! You can download for free this stylized water shader I made for my projects in UE5🌊✨I hope you like it! You can get it in the link below 👇 pic.twitter.com/CVO2AWmjiq&mdash; Fabián López (@carepas_design) August 1, 2023 Wondering how to art direct your UE5 Lumen lighting without using hundreds of expensive light sources? Let's do what we always do and steal a creative idea from some other devs! @lotfgame uses hidden emissive shapes to great effect. Here's how to do it:#UE5 #UE5Tips #gamedev pic.twitter.com/7ldhLSUFCD&mdash; Kyle Lautenbach (@KyleLautenbach) August 3, 2023 Night Vision™ Helmet Mod WIP 🪖 #3D #blender #b3d #scifi pic.twitter.com/gmpR9mzlua&mdash; Sabrina Garcia (@sab_3d) August 3, 2023 pic.twitter.com/llPjGECanP&mdash; Rui Huang (@RuiHuang_art) August 3, 2023 The new Ancient interactive swampy water from CS2 beta pic.twitter.com/kJfe6etCw2&mdash; Matthew Wilde (@skilful) August 3, 2023 武器腕 VRC用に制作中#blender #b3d pic.twitter.com/xDVbcWnUvR&mdash; 機械騎士 (@kikaikisi) August 3, 2023 PBD (Position Based Dynamics) Car Project with #ue5 #niagara. Part1.Main movement of wheels ready. One particle per wheel. Three constraints: distance between them, ground collision and post-process velocity. Next step: SDF collision + soft-body wheels#gamedev #physics #pbd pic.twitter.com/JI1Gj1VRc8&mdash; Jose Moreno (@jose_morval) August 7, 2023 DDR #MaterialMaker pic.twitter.com/OIuDnXWLaJ&mdash; celestialmaze (@cmzw_) August 8, 2023 What's upHere's my blender basic shader I'm using to render my sculpts.No retopology, No UVTo enhance you could add pores, play with the subsurface, anisotropic and more. pic.twitter.com/EKhME4vOkL&mdash; Snowed ❄️ (@So_Snowed) August 7, 2023 Graphics Programming weekly - Issue 299 - August 6th, 2023 https://t.co/IyKuVCPAvl pic.twitter.com/oXsSDsOErJ&mdash; jendrik illner (@jendrikillner) August 7, 2023 The Matrix or Debug Mode? 👀Augmented Reality VPS (visual positioning system) with real-time physics (ammo.js) all running on the web. pic.twitter.com/JmgUCrvrIL&mdash; I▲N CURTIS (@XRarchitect) August 11, 2023 How to animate a tail using damped track constraints #b3d #blender3d pic.twitter.com/rkohzdLZsN&mdash; Bill 'BlenderBrit' Barber 🥔 (@BlenderBrit) August 17, 2023 The water's getting rough, like there were a storm coming...Turbulent will release in time for Blender Market's Summer Sale so will be discounted by 25% at launch!Only from @blendermarket #b3d #blender #blender3d #blenderEevee #CGI #3dcgi #procedural pic.twitter.com/jU7rvWfpFy&mdash; OfNodesAndNoodles (@nodesandnoodles) August 18, 2023 cloth work pic.twitter.com/nX3GvLTqjw&mdash; Carson Reed (@cinemamotionss) August 18, 2023 Procedural ping-pong 🏓fully generated in GN! No sim nodes, just math ✨ pic.twitter.com/z00UwFPyOo&mdash; Nugget 🏳️‍🌈 (@HotdogNugget) August 23, 2023 Happy 6 years to Uncharted Lost Legacy! Was so fun getting to do a lot of the layout design and the environment art for the Western Ghats drivable jeep section 😀Full timelapse video I made with more shots here for those interested. https://t.co/Jnu0RWA8xL pic.twitter.com/wQORXbcCVH&mdash; Anthony Vaccaro (@vaccaro3d) August 23, 2023 Added adhesion #gamedev #indiedev pic.twitter.com/lP6MgSSroq&mdash; Mytino (Asbjørn L) (@MytinoGames) August 21, 2023 最近の進捗をダイジェストでまとめてみました。今年の夏は怖いものからランドスケープまで色々着手できたかなと思います。 #GameDev #UE5Study pic.twitter.com/LccUD4frHm&mdash; 鹿野護 (@zuga) August 25, 2023 A Water Wave spell for #VFXFriday #RealtimeVFX 🌊Artstation link with a little breakdown: https://t.co/AX4UWFb9Ii pic.twitter.com/XSoQcQn34y&mdash; 3ookeeper (@3ookeeper) August 25, 2023 Check out the #SkeletalEditor Usage Guide for how to get up and going with the new Skeletal Editor Plugin in #UE5. #rigging #gamedev https://t.co/xQTBlNNle1 pic.twitter.com/Nkp6Cv77dT&mdash; Chase (@chasescooper) August 25, 2023 tearing#Houdini pic.twitter.com/CFNXA3Uviz&mdash; Junichiro Horikawa (@jhorikawa_err) August 24, 2023 I just published the Voxy tool development article on Medium, please read it and tell me your opinions#UnrealEngine5 #ue5 #screenshotsaturday @UnrealEngine @80Level https://t.co/vSTgP04GVC&mdash; Saeid Gholizade (@saeid_gholizade) August 26, 2023 いいねがたくさんついたイラスト（アニメ）風な木の3Dモデル。実はペラッペラな板だったなんていまさら言えない…（ので見せる）#blender #b3d #Blender3d #3DCG #bnpr pic.twitter.com/jVTqQ5Wqr0&mdash; 湊 -minato- (@minatop) December 9, 2022 pic.twitter.com/Gp1R00nvKC&mdash; celestialmaze (@cmzw_) August 28, 2023 QT your art with trees. 🌳 https://t.co/qkTCGfyAAT pic.twitter.com/xu26JqjmS2&mdash; Maciej Hernik (@Throwdrow) August 29, 2023 仕事終わりにshader Graphで目のシェーダーを組んでみました。最低限のみだけ。わかりづらいけどパララックスも入れてます。#ShaderGraph https://t.co/nUpRPgseBB pic.twitter.com/20UKrVp8bM&mdash; ぽこぽん丸。 (@x_pokoponmaru_x) August 28, 2023 Dynamic lights are expensive, using sprites with a modulate blend material you can multiply screen colors behind the sprite and use depth masking to fake a light radius, cheap and can work surprisingly well. #screenshotsaturday #UE4 #gamedev #indiedev pic.twitter.com/fNct4EYTXS&mdash; Klemen (@klemen_lozar) August 25, 2018 Another test case for #EmberGen 1.1Top is meant to be no-slip while bottom is free-slip. Hard to tell them apart as the movement is so small and the collider fairly small, but the bottom one should be a bit more energetic overall I think pic.twitter.com/gbytWeH2Y7&mdash; Morten Vassvik (@vassvik) August 30, 2023 个人微信公众号： CG VisionTube 注：学习交流使用！","link":"/2023/09/01/Technically-Art-Issue-6/"},{"title":"Technically Art: Issue 4 (2023.06.03)","text":"Hui! A new article: The Four Vertex Volume: https://t.co/Fzmb9NbW6LAlso features: Laser Knifes! Hope you like it, let me know in the comments!Mentioned: @SebHillaire @Deathreycg torbach#gamedev #vfx #realtimevfx #starwars pic.twitter.com/ccgP8xu849&mdash; Simonschreibt (@simonschreibt) April 30, 2023 At #SIGGRAPH 2023 we will show how to extend microfacet theory to handle height-varying roughness and material, in order to derive new BSDFs for asymmetric heightfields such as eroded and damaged surfaces. 1/nhttps://t.co/LU4XRMGQ7v pic.twitter.com/nQylLcSwA5&mdash; Eugene d'Eon (@ejdeon) May 2, 2023 UnrealEngineで使用する基本的なノード一覧を5ページに渡ってblueprintUEのリンク付きでまとめました✍🏻暇な時にでもチェックしてみてください! #UnrealEngine https://t.co/AvjPLswhdi pic.twitter.com/vrpqVM38Ae&mdash; daichi_gamedev (@daichi_gamedev) May 2, 2023 I found some free time and revised the cobweb hda. This is a new version that will create the branching setup and work as a pre-process for a simple vellum sim. This will help to emulate tension and achieve more realisitic results. #houdini #gamedev #3d pic.twitter.com/aZQqkdwuEP&mdash; Jose_L_Molfino (@Jose_Molfino) May 4, 2023 Slicing ANY mesh (visual) with 2 lines of HLSL.if (dot(worldPos - planePos, planeNorm)) &gt; 0.0 discard (the pixel, or clip alpha) ⭕🌠Mesh back faces can be stencil masked with the plane to 'project' a texture as the clipped surface.#unitytips #unity3d #gamedev #indiedev pic.twitter.com/mKOUN1MQkj&mdash; Mirza Beig (@TheMirzaBeig) May 4, 2023 Here's the updated getaway car in-game!#screenshotsaturday #madewithunity #gamedev pic.twitter.com/2tnSdyjuL6&mdash; Nick Carver (@NickDCarver) May 6, 2023 gameplay in #UE5 showing a Martian dust devil and mega-storm made with #EmberGen &amp; using basic flipbooks/sprites in-game pic.twitter.com/lZFF1FAc1i&mdash; Jason Key (@key_vfx) May 11, 2023 #UnrealEngine 5.2 is out! You've seen how #Niagara Fluids are higher quality, faster, can be cached, and have engine-integrated lighting. We also redesigned the user interface so they are far easier to use, and wrote extensive documentationhttps://t.co/ed1rePsvmmTry it out! pic.twitter.com/ZQAbY181yC&mdash; Devon Penney (@dmpvfx) May 12, 2023 the evolution of the God of War ⛓️ pic.twitter.com/5PPHy0h8ex&mdash; Sony (@Sony) May 12, 2023 Ever wondered how water works in video games? As it turns out, there's a ton of smoke and mirrors in the background, without anyone ever realizing it.---&gt; another huge 🧵 pic.twitter.com/8QmBmMg4B6&mdash; Thomas @ Stylized Station (@StylizedStation) May 13, 2023 Ever wondered how grass is made in video games? Making grass may seem simple, but theres actually a lof of history and technology behind this surprisingly complex topic. Another big thread 🧵 pic.twitter.com/Zbc6zrmgVz&mdash; Thomas @ Stylized Station (@StylizedStation) May 15, 2023 I'm excited to release this new project I've been working on for the past few months, focusing on the new UE5.2 substrate material ! #gamedev #UnrealEngine5 #indiedev pic.twitter.com/2p8UgLMPzC&mdash; Corentin Demougeot (@UTCompiler) May 15, 2023 I've given my little Tech Art course now 5 times (3x via Zoom, 2x in person) and the feedback was nice. I've summarized the content on this page, just in case someone else is interested in this course:▶ https://t.co/2UUqWQMmb1#gamedev #techart #realtimevfx #teaching pic.twitter.com/HTM4SRAYt3&mdash; Simonschreibt (@simonschreibt) May 15, 2023 making a perspective camera match an orthographic camera 🎥orthographic cameras can be thought of as a special case where FoV = 0 - the trick is to decide what to keep fixed when changing FoV. in this case, I fix the near clip heighttry it out here: https://t.co/pn1OLSybIH pic.twitter.com/ykWTGFbQgE&mdash; Freya Holmér (@FreyaHolmer) May 15, 2023 I didn't really need any math for my past projects, which was a bonus since me and math have a rough relationship. But as I'm progressing in my game developer journey, I'm back again watching this video series. It is absolute gold. I recommend everyone to watch it. https://t.co/eikEQYYZnB&mdash; Kris (@thatDevKris) May 15, 2023 Introducing &quot;FFX Geometry Explainer&quot; - the ultimate tool for Houdini educators &amp; learners! Simplify complex concepts &amp; visualize Geometry Components / Attribute Classes effortlessly. https://t.co/uV5uITssHF#GeometryExplainer #Houdini #HoudiniHDA #EducationalTool #fendrafx pic.twitter.com/97At0liTsp&mdash; David Torno (@aeioweyou) May 15, 2023 The tutorial area is a controlled environment where you can learn all the game's mechanics and swim around with some fish pic.twitter.com/2NTlTb1SFV&mdash; Khena B (@Khena_B) May 14, 2023 Here is our #SIGGRAPH2023 paper on initializing hybrid hair simulations to prevent sagging when the simulation begins with my PhD student @JerryHsu32 and collaborators at Tencent, Tongtong Wang, Zherong Pan, Xifeng Gao, and @kui_wu:https://t.co/y01rwkAbew pic.twitter.com/xZ7GN8mTs0&mdash; Cem Yuksel (@cem_yuksel) May 16, 2023 testing out more #simulationnodes ideas. Purely 2d simulation faked to 3d but could work in many scenes. Whitewater particles modified from the blender demo file. #geometrynodes #b3d pic.twitter.com/tPegg6mmTR&mdash; Miettinen Jesse - Blenderesse (@JesseMiettinen) May 18, 2023 Car controller looking good 👍#madewithunity pic.twitter.com/oxoW0CMWDa&mdash; Alex Ameye (@alexanderameye) May 18, 2023 In a recent interview by @80Level they had an in-depth coverage of my workflow, in which I tried to succinctly break down the process for this portrait and some of the challenges I had to overcome from start to finish.https://t.co/VPz1y0YIxd#ZBrush #Maya #XGen #ArnoldRender pic.twitter.com/PDV9wggPBw&mdash; Hadi Karimi (@HadiKarimi_Art) May 18, 2023 I wrote a blog post on creating render targets for shaders, but without the render target camera overhead.Read it here: https://t.co/DXsfz5KSZu!#gamedev #ue5 #ue4 #unrealengine #tutorial&mdash; Celeste Neukirchen (@CatherineCel) May 23, 2023 Finally achieved some fluid simulations in Geometry nodes. Still far from perfect tho. WIP.The simulation is &quot;2.5D&quot;, entirely done in Geometry nodes, Blender 3.6#geometrynodes #b3d #blender #WIP pic.twitter.com/bWDCEcL8Qe&mdash; Shahzod Boyhonov 🔶️ (@specoolar) May 26, 2023 We figured you needed to see LiquiGen today. The simulation, rendering, and meshing are all real-time. pic.twitter.com/QzgzSgeaF5&mdash; JangaFX Software (@JangaFX) May 26, 2023 &quot;you can't multiply vectors&quot; hold my teain my research into geometric algebra, I've come up with a neat minimal starting assumption:v² = ||v||² - a vector multiplied by itself is its length squaredit then follows that multiplying two vectors, gives you a quaternion c: pic.twitter.com/LzE6bOdhz6&mdash; Freya Holmér (@FreyaHolmer) May 26, 2023 fake particles #MaterialMaker pic.twitter.com/8dcJZbR9pB&mdash; celestialmaze (@cmzw_) May 28, 2023 Reposting this multi-layer shader made by @ushadersbible that recreates cracked ice! ❄️ Any thoughts on its use? 👇Learn unity shaders linearly; https://t.co/E2niRCK1Ju 📚🚀#gamedev #indiedev #unity3d #unitytips #ゲーム開発 #ゲーム制作 #screenshotsaturday #indiegames pic.twitter.com/4LNqmd0T1y&mdash; IndieGames 👾 (@Indiedev_Hub) May 28, 2023 How #SuperAdventureHand started VS How it's going. 💪You can play the demo and add the game to your wishlists here! 🎮👉🏻 https://t.co/Ng553GoAp6 👈🏽#wishlistwednesday #gamedev pic.twitter.com/2aGDdkfsyg&mdash; bright_gambit (@bright_gambit) May 31, 2023 Got constraints working in a much more controlled way, without breaking from intense movement. Vehicle stuff is very early. Impressed by how well Chaos is handling this stuff! pic.twitter.com/2VLJoT1PAt&mdash; Ev Schwab (@evelyn_schwab) May 30, 2023 Nothing much - but for the sake of transparency and developing this game for, and with, you - we figured we wanted to start sharing more work in progress.Here is a look at the weapon collision system. We intend to provide you with much more behind-the-scenes footage and other… pic.twitter.com/802wicVW7s&mdash; Blight: Survival (@BlightSurvival) May 24, 2023 个人微信公众号： CG VisionTube 注：学习交流使用！","link":"/2023/06/03/Technically-Art-Issue-4/"},{"title":"Technically Art: Issue 5 (2023.06.01-2023.07.31)","text":"Hello,很抱歉最近在忙其他的事情，导致6月份的内容没有更新（应该没有人发现吧～），这次包含6、7两个月的内容，希望对大家有帮助哦。喜欢或者有建议的话可以留言哈～ Checking the DOTS ECS samples with Unity 2022 LTS. This one (Tornado) is really cool. https://t.co/rzxLzN8QJm pic.twitter.com/3xRCYLsqkp&mdash; Keijiro Takahashi (@_kzr) June 1, 2023 #UnrealEngine #UE5 #gamedevDayum, super stoked on this!😁Visuals need some love but it's very statisfying already.Splashes are generated based on the velocity at points all around the boat &amp; are further injected into a foam diffusion system once intersecting with the water pic.twitter.com/zV5sfSnSHH&mdash; Ghislain Girardot (@GhislainGir) June 2, 2023 Prototyping dash and blink Player Abilities. #UE5 #trenchlike #TrenchTales pic.twitter.com/O047vtDig0&mdash; Trench Tales (@trench_tales) June 3, 2023 If you play many video games, you may have noticed something interesting. Everything is flat.But these flat models are all catching the light and reacting as if they have a limitless amount of polygons. So what's the reason for this, and why is it happening?Another long 🧵 pic.twitter.com/ThkGOfOnN2&mdash; Thomas @ Stylized Station (@StylizedStation) June 5, 2023 New typing method in #VR with #handtracking pic.twitter.com/zwAI72IA3p&mdash; Prof Sylvia Pan 潘雪妮 (@panxueni) June 4, 2023 We use #BVH for #raytracing but is it always the good choice? Our paper &quot;Neural Intersection Function&quot; at #HPG2023 will show that we can embed #NeuralNetworks in a ray tracing pipeline and show it can make it faster. We'll upload preprint soon #amd #radeon #HIP pic.twitter.com/CRLcRLRnnQ&mdash; takahiro harada (@haradatakahiro) June 5, 2023 blur trick for the optical fit pic.twitter.com/N364mXHla2&mdash; Andreas Storm (@avstorm) June 8, 2023 コットン剥がしチャレンジおしまい。手探りな部分もあって厚みとか諸々お手本と違うところもあるけど、Vellumの復習になって良かった！#Houdini #3DCG #VFXhttps://t.co/zf4CaFZwdO pic.twitter.com/HvovNZeYjT&mdash; Tsukasa Toukura (@oneslocus) June 8, 2023 New Tutorial!https://t.co/xtS1ffViRBMaking these UI Fluid orb effects with #Houdini and #UnrealEngine5 #techart #gamedev pic.twitter.com/tcbNtYjcLt&mdash; Simon (@Simon_Houdini) June 8, 2023 Developing the highlight effect further, I offset the thickness of the highlight effect relative to the sunlight's direction and I think it looked more natural.This time, I'm testing them on @/artstoff's Zelda model and my OC, Terra! pic.twitter.com/GhsK40gder&mdash; Lez (@leztusi) May 22, 2023 wip#b3d #Procreate #UE5 pic.twitter.com/9RYWbqfigo&mdash; Eris snail (@Erisdraw3D) June 6, 2023 Testing better realtime AR reflections with a floating water orb.Used VR IK for the reflection, along with Ultraleap tracked hand model pic.twitter.com/XxSPwmPwQs&mdash; Lee Vermeulen (@Alientrap) May 31, 2023 Blender4.0、サンビームノードがリアルタイムに対応！！ pic.twitter.com/h2U4r4782C&mdash; 友 (@tomo_) June 9, 2023 It's notoriously harduous to add custom shading models to #UnrealEngine . I was fiddling with this approach to a stylized paint style yesterday night and quite happy with the progress so far.The textures are generated in @Substance3D #SubstanceDesigner pic.twitter.com/0HqJbTZlT6&mdash; Elbriga (@gabriel_d_L) June 14, 2023 Round 2! Let the megascan dead tree hunt begin! pic.twitter.com/6SaEwLw1bg&mdash; Romain Durand (@RDurandArt) June 15, 2023 I recently finished another furry thing. This is my second attempt at a digital Llama. This one is done entirely in #Houdini and @redshift3d. I hope you like it. 🦙 pic.twitter.com/hCaueVshWw&mdash; Tomas Kral (@TomasKral_cz) June 15, 2023 Another shot from this project https://t.co/6nYsFp0vqu pic.twitter.com/7ZUiK0LAOa&mdash; matt vince (@MattVinnie) June 16, 2023 I finally updated my Unity DOTS/ECS sample project Voxelman. The previous update was in Jul 2018. It required total rewriting, but it was fun knowing how things improved.https://t.co/u5C884bMvz pic.twitter.com/UjwGi1wMUX&mdash; Keijiro Takahashi (@_kzr) June 17, 2023 waystone #b3d #greasepencil pic.twitter.com/WztvxEiAwX&mdash; lacruzo (@lacruzo_) June 16, 2023 A new excerpt from the AI/machine learning issue of @beforesmag --&gt; Going deep on muscle strains with @WetaFXofficial. Why Wētā FX changed its animation system and adopted new deep learning methodologies for ‘The Way of Water’https://t.co/Pfvse7miBm pic.twitter.com/jl2oENaR71&mdash; befores &amp; afters magazine (@beforesmag) June 16, 2023 Waterfall generation inside Unity 👌🏻#gamedev #indiedev #madewithunity #HDRP pic.twitter.com/OAc3NxbUy3&mdash; OMYOG (@omeletteandyog1) June 9, 2023 UE5のPath Tracer試してた。昔のデータを流用してUEのGroomがPath Tracerでどんな感じか確認。毛のsimがリアルタイムなのはやっぱり良い。オフライン用途でPath Tracerを使うことを考えていきたい pic.twitter.com/IAGjaLXrBK&mdash; Hirokazu Yokohara (@Yokohara_h) June 9, 2023 Some might say its real, I just say its liquigen. (real-time) pic.twitter.com/G0IqGEke1w&mdash; JangaFX Software (@JangaFX) June 17, 2023 If you happen to be a student, a programmer, or someone passionate about Unity, the Visualizing Equations book might be helpful! Start making tools to visualize math equations in Unity.⭐️Take a look at it here,https://t.co/1iBQNkjK18#unity3d #programming #techart… pic.twitter.com/JlXO29CJxs&mdash; The Unity Shaders Bible (@ushadersbible) June 18, 2023 Scaling down grass when close to the cameraDon't let that grass get in the way of your view 📸#unity #shadergraph #d #gamedev #shader #madewithunity #blender #vfx #gamedeveloper #indiegamedev #games #shaders #game #realtime pic.twitter.com/fPPKMa81M5&mdash; StudioRoss (@nfpRoss) June 21, 2023 🎉 Text Animator 2.0 is out! 🎉 You can:- Preview effects in Edit mode- Create your own tags (e.g. &quot;&lt;angry&gt;&quot; or &quot;&lt;cold&gt;&quot; as new variants of the &quot;shake&quot; effect)- Create even *more* effects and combos- Hide letters and words individually and much more! Link 👇🏻 #madewithunity pic.twitter.com/6q5ks3d5DG&mdash; Febucci 🔜 Gamescom (@febucci) June 20, 2023 S. Kubrick Pt. 2#Maya #XGen pic.twitter.com/dV70Y50LqT&mdash; Hadi Karimi (@HadiKarimi_Art) June 22, 2023 .@specoolar shared a fun Geometry Nodes simulation that allows you to touch grass in Blender. https://t.co/5FrcTZoetG#3dart #Blender #geometrynodes #grass #simulation #environmentart #b3d pic.twitter.com/fdspRkhI0u&mdash; 80 LEVEL (@80Level) June 22, 2023 Yeet your slime using a pan!This idea struck me many moons ago and I had to give it a try.Would you play as the dungeon lord wielding the pan? (each stir grants an attack bonus)#UE5 #gamedev #techart #vfx #realtimevfx pic.twitter.com/qvoEmkfJnN&mdash; Asher Zhu (@Vuthric) June 23, 2023 I made a spline guide pic.twitter.com/zdQdRwFbxU&mdash; Freya ✈ Boston (Aug 3 to 6) (@FreyaHolmer) June 23, 2023 I took a workshop to create a realistic river in a #blender for simulation I used the #flipfluids 🌊 add-on. I think I've achieved it. In my next project, I will try to push even more. Add the crumbs and dirt in the water. 🍃 #b3d #cgi #polyhaven #geoscatter pic.twitter.com/zl1Scv3KuP&mdash; Luxor🔸 (@Luxor9500) June 23, 2023 新しいマテリアル pic.twitter.com/FZhkdOwXYv&mdash; CKB@🏴‍☠️🐙🔱🎣次のステージへ (@miku1596) June 24, 2023 It was a pleasure to work on this character. Thank you for the opportunity @lucasridley https://t.co/kYE3iABF26 and thank you for the great model https://t.co/VwYTzidCWH #3d #rigging #rig #maya #animation #character #modeling #design pic.twitter.com/kN57hxdgQq&mdash; Artem Dubina (@TemaRoots) June 26, 2023 Sorry It took a bit long, but I wrote a blog about how to implement fake soft body simulation with Niagara.https://t.co/cg3NtN1iBKAlso, I made the actual working data available for those who want just the data itself.https://t.co/3dklq1ZwO3 pic.twitter.com/XaQpmjjOc0&mdash; HeyYo (@yo_hanashima) July 1, 2023 Graphics Programming weekly - Issue 294 - July 2nd 2023 https://t.co/3skuKHhzeO pic.twitter.com/dkfT2ZtONa&mdash; jendrik illner (@jendrikillner) July 3, 2023 Okay this took a TON of hours to sim. I think I need to slow it down a lil bit. There was a node for that, can't remember it atm. Some suggestions? No WW #flip #houdini #watersimulation #vfx #cg pic.twitter.com/sn68dgNqoV&mdash; Helios (@GudielVFX) July 3, 2023 巨大な蛇のような動きのテスト。スプラインリギングを用い、ブループリントで動的にアニメーションさせてます。なんとかコントロールリグが理解できるかも。これ、波と連動させたら迫力出そう！ #GameDev #UE5Study pic.twitter.com/VnfPvbqWd5&mdash; 鹿野護 (@zuga) July 2, 2023 A quick animation test using my custom head rig in Maya, haven't spent much time on the secondary in-between blend shapes yet.#AudreyHepburn#ZBrush #Maya #ArnoldRender pic.twitter.com/Z6DPJ4PpjU&mdash; Hadi Karimi (@HadiKarimi_Art) July 3, 2023 The length of your weapon makes a difference. Shorter weapons will be less hindered in tight spaces. Attachments may also extend the length, so take that into consideration. pic.twitter.com/69JUgd3un0&mdash; Doku (@DokuGamesLTD) July 12, 2023 This is another demo showing how Blender's geometry nodes can be used to calculate electric fields in 3D space! These are two spheres with surface charges, watch how the electric field lines change as I move them around and adjust their electric charges! releasing soon! #b3d… pic.twitter.com/MLHl0JKKCI&mdash; Sam M (@samerps) July 12, 2023 #UnrealEngine #UE5 #gamedevLots of polishing done on this scan post process material... Still needs a bit of love tho.It's going to be the topic of my next breakdown :) Lots to say about this! I especially like the texture upres effect. pic.twitter.com/DnPSQSLscR&mdash; Ghislain Girardot (@GhislainGir) July 11, 2023 Something Ive been playing around with is making better looking foliage that feels more grounded. One of those things involves blending tree branches onto the trunk more naturally. Here Im just blending the UVs to remove the seam pic.twitter.com/KBxVF2BuAV&mdash; MacKenzie Shirk (@mac_shirk) July 12, 2023 Get ready! I'm happy to share that Episode 1 of the Procedural Environment Interactions series is officially uploaded and set to go live on Thursday!This is the first episode of an eight part teaching you how to make this procedural animation in #unity3d! pic.twitter.com/H4dIzgfJC1&mdash; Nicky B (@NickyBoccuzzi) July 11, 2023 new #EmberGen vid from @polyfjord Full workflow explained on YouTube (link below) pic.twitter.com/zWDDqd3j2V&mdash; Jason Key (@key_vfx) July 7, 2023 Cloth together with GeoNodes setup is so underrated #b3d #art pic.twitter.com/RsKhj75Lkg&mdash; _blender_man_ (@_udjinstone_) July 12, 2023 Simple but effective way to get some damaged details pic.twitter.com/LgIcNZ1EHf&mdash; MacKenzie Shirk (@mac_shirk) July 12, 2023 Currently playing with a lil metal micro scratches shader with proper physically based anisotropy✨ pic.twitter.com/GvcFSsjtg2&mdash; Nugget 🏳️‍🌈 (@HotdogNugget) July 11, 2023 Saw someone do similar a ~week ago (in an engine that won't be named) and thought &quot;can't be that hard&quot;.TBF I'm cheating with the particles atm, and not happy with the water shader yet, but that's a tomorrow problem ^^#GodotEngine #ScreenshotSaturday #indiedev #gamedev pic.twitter.com/lR24MP4SNc&mdash; Beau Seymour (@Bimbam_tm) July 14, 2023 SpiderVerse glitch test in #blender3d using #geometrynodes. Finally done with exams so you can expect more posts from me now!#SpiderVerse #AcrossTheSpiderVerse #ATSV #b3d #3D #procedural #blendercommunity #Mathematics pic.twitter.com/CAhFxgYJQT&mdash; Mohammed Riaz (@artofriaz3d) July 13, 2023 Hand sculpted expressions. WIP #3dart #animation #photorealism #cgi #digitalhuman pic.twitter.com/Jrcany2cIF&mdash; Şefki Ibrahim (@sefkiibrahim) July 28, 2023 Another procedural animation test with Geometry nodes, Blender 3.6#blender3d #b3d #geometrynodes pic.twitter.com/WF3LDs1ovj&mdash; Shahzod Boyhonov 🔶️ (@specoolar) July 28, 2023 Pin art style overworld map concept#UnrealEngine #UnrealEngine5 #UE5 pic.twitter.com/hGTQVMNWmQ&mdash; Sam Barkes (@sam_barkes) July 29, 2023 Improved foam and bubbles and still 60fps in viewport.Now they only appear where they should.No sims. No geo nodes.Just a shader!#b3d #blender #blender3d #blendercommunity #blenderEevee #3dart #cgi #3dcgi #procedural pic.twitter.com/5spFTI9GOE&mdash; OfNodesAndNoodles (@nodesandnoodles) July 30, 2023 物理アニメーションをUE5で追加されたPhysics Controlに変えたらかなり安定するようになった#gamedev #UnrealEngine #ゲーム開発 pic.twitter.com/C6KeaXev1Q&mdash; Regusan@猫ゲー開発・SteamにてHookEscaper販売中 (@_Regusan) July 30, 2023 Added a tone of changes to the parkour system! WIP!#indie #indiedev #indiegamedev #indiegame #gamedev #gamedevelopment #ue4 #gamedeveloper #ue5 pic.twitter.com/a2v1k4dL97&mdash; ENENRA (@ENENRAGame) July 30, 2023 neverwhere | ᴄ:\\sᴀʟᴇᴍ\\ᴛʜᴇ-ᴇɴᴅA small personal UI project: Crafting a UI for a (non-existent) multiplayer survival game. In a dystopian world where society has crumbled, modern tech is scarce and more valuable than life.🧵for more pic.twitter.com/6iwdxakrHE&mdash; Gav (@GavMakesGames) July 30, 2023 个人微信公众号： CG VisionTube 注：学习交流使用！","link":"/2023/08/05/Technically-Art/"},{"title":"The Book of Shaders-Notes","text":"本文章是基于The Book of Shaders做的学习要点笔记，方便自己总结和分享，有兴趣的小伙伴还可以一起相互交流，ps：本人是初次接触glsl相关内容～多多指教. 设置Uniform （统一值）1234567#ifdef GL_ES //#代表预处理指令，这段代码检查了是否已经定义了GL_ES宏precision mediump float; //设定精度限定符 lowp:低精度 mediump:中精度 highp:高精度#endif //#endef指令解除宏定义uniform vec2 u_resolution; // 画布尺寸（宽，高）uniform vec2 u_mouse; // 鼠标位置（在屏幕上哪个像素）uniform float time; // 时间（加载后的秒数） gl_FragCoord gl_FragCoord存储了活动线程正在处理的像素或屏幕碎片的坐标.是一个 vec4 类型的变量 (x, y, z, 1/w)， 其中 x, y 是当前片元的窗口坐标，OpenGL 默认以窗口左下角为原点. gl_FragCoord存储了活动线程正在处理的像素或屏幕碎片的坐标.有了它我们就知道了屏幕上的哪一个线程正在运转. 在 GLSL 中，您可以与 XYZW、STPQ 或 RGBA 混合。它们的含义完全相同.所以 position.st 与 position.xy 完全相同.但是，您不允许组合不同组中的混合蒙版。所以 position.xt 是不允许的. 12vec2 st = gl_FragCoord.xy/u_resolution; //是对坐标进行了规范化。这样做是为了使所有的值落在 0.0 到 1.0 之间，这样就可以轻松把 X 或 Y 的值映射到红色或者绿色通道. 向量点乘（内积） 点乘的几何意义是可以用来表征或计算两个向量之间的夹角，以及在b向量在a向量方向上的投影. 公式： 推导过程： 参考： 向量的点乘。向量点乘（内积）。 Shapingfunction绘制一条绿色的线1234567891011121314151617181920212223242526272829303132#ifdef GL_ESprecision mediump float;#endifuniform vec2 u_resolution;uniform vec2 mouse;uniform float time;//plot a line on Y using a value between 0.0-1.0float plot(vec2 st){ return smoothstep(0.02, 0.0, abs(st.x - st.y));}void main(){ vec2 st = gl_FragCoord.xy/u_resolution; //Normalize texture coords from 0.0 to 1.0. float y = st.x; vec3 color = vec3(y); //plot a line float pct = plot(st); color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0); gl_FragColor = vec4(color,1.0);}//“st”是纹理坐标，“s”是沿纹理的水平轴，“t”是垂直轴。//“xyz”代表世界位置，而“st”代表沿表面区域的位置。 “uv”有时也用于纹理坐标。//pct”是“percent”的缩写，因为它的范围是从 0.0 到 1.0 一个求 x 的 5 次幂的曲线1234567891011121314151617181920212223242526272829#ifdef GL_ESprecision mediump float;#endif#define PI 3.14159265359 //定义了一个宏，使得每当程序调用 PI 的时候就用 3.14159265359 来替换它.uniform vec2 u_resolution;uniform vec2 u_mouse;uniform float time;//// Plot a line on Yfloat plot(vec2 st, float pct){ return smoothstep(pct-0.02, pct, st.y) - smoothstep(pct, pct+0.02, st.y);}void main(){ vec2 st = gl_FragCoord.xy/u_resolution; //Normalize texture coords from 0.0 to 1.0. float y = pow(st.x, 5.0); //pow():（求x的y次幂）是 GLSL 的一个原生函数. vec3 color = vec3(y); //plot a line float pct = plot(st, y); color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0); gl_FragColor = vec4(color,1.0);} Step() step() 插值函数需要输入两个参数。第一个是极限或阈值，第二个是我们想要检测或通过的值。对任何小于阈值的值，返回 0.0，大于阈值，则返回 1.0。 123456789101112131415161718192021222324252627#ifdef GL_ES precision mediump float; #endif #define PI 3.15459265359uniform vec2 u_resolution;uniform float u_time;float plot(vec2 st, float pct){ return smoothstep( pct-0.02, pct, st.y) - smoothstep( pct, pct+0.02, st.y);}void main() { vec2 st = gl_FragCoord.xy/u_resolution; // Step will return 0.0 unless the value is over 0.5, // in that case it will return 1.0 float y = step(0.5,st.x); vec3 color = vec3(y); float pct = plot(st,y); color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0); gl_FragColor = vec4(color,1.0);} Smoothstep() smoothstep()。当给定一个范围的上下限和一个数值，这个函数会在已有的范围内给出插值。前两个参数规定转换的开始和结束点，第三个是给出一个值用来插值。 1234567891011121314151617181920212223242526272829#ifdef GL_ESprecision mediump float;#endif#define PI 3.14159265359uniform vec2 u_resolution;uniform vec2 u_mouse;uniform float u_time;float plot(vec2 st, float pct){ return smoothstep( pct-0.02, pct, st.y) - smoothstep( pct, pct+0.02, st.y);}void main() { vec2 st = gl_FragCoord.xy/u_resolution; // Smooth interpolation between 0.1 and 0.9 //float y = smoothstep(0.1,0.9,st.x); float y = smoothstep(0.2,0.5,st.x) - smoothstep(0.5,0.8,st.x); // vec3 color = vec3(y); float pct = plot(st,y); color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0); gl_FragColor = vec4(color,1.0);} 正弦和余弦函数当你想用数学来制造动效，形态或去混合数值，sin 和 cos 就是你的最佳伙伴。 sin 和 cos 返回的是规范化的值（即值域在 -1 和 1 之间）. 正弦函数 Sin1y = sin(x); 仔细看 sin 曲线。观察 y 值是如何平滑地在 +1 和 -1 之间变化。 1y = abs(sin(x)); sin(x) 的绝对值（abs()）。现在它看起来就像一个弹力球的轨迹 余弦函数 Cos 1y = cos(x); 1y = abs(cos(x)); 正弦、余弦和正切Sine、Cosine和Tangent（通常缩写为sin、cos和tan）各自是直角三角形的边比： 颜色定义颜色的变量可以由x, .y, .z来表示，也可以被写作.r, .g, .b 和 .s, .t, .p。（.s, .t, .p通常被用做后面章节提到的贴图空间坐标）你也可以通过使用索引位置[0], [1] 和 [2]来访问向量. 12345vec4 vector;vector[0] = vector.r = vector.x = vector.s;vector[1] = vector.g = vector.y = vector.t;vector[2] = vector.b = vector.z = vector.p;vector[3] = vector.a = vector.w = vector.q; GLSL函数：mix(x, y, a) 这个函数让你以百分比混合两个值。百分比的取值范围是0到1！ 混合颜色1234567891011121314151617181920#ifdef GL_ESprecision mediump float;#endifuniform vec2 u_resolution;uniform float u_time;vec3 colorA = vec3(0.149,0.141,0.912);vec3 colorB = vec3(1.000,0.833,0.224);void main(){ vec3 color = vec3(0.0); float pct = abs(sin(u_time)); //用于0-1的遮罩 // Mix uses pct (a value from 0-1) to // mix the two colors color = mix(colorA, colorB, pct); gl_FragColor = vec4(color,1.0);} 玩玩渐变 mix() 函数有更多的用处。我们可以输入两个互相匹配的变量类型,以便获得了混合颜色单独通道 .r，.g 和 .b的能力. 12345678910111213141516171819202122232425262728293031323334353637#ifdef GL_ESprecision mediump float;#endif#define PI 3.14159265359uniform vec2 u_resolution;uniform vec2 u_mouse;uniform float u_time;vec3 colorA = vec3(0.149,0.141,0.912);vec3 colorB = vec3(1.000,0.833,0.224);float plot (vec2 st, float pct){ return smoothstep(pct-0.01, pct, st.y) - smoothstep(pct, pct+0.01, st.y);}void main(){ vec2 st = gl_FragCoord.xy/u_resolution.xy; vec3 color = vec3(0.0); vec3 pct = vec3(st.x);// 获得了混合颜色单独通道 .r，.g 和 .b的能力. pct.r = smoothstep(0.0,1.0, st.x); //直线代表了颜色r通道的混合比例 pct.g = sin(st.x*PI); //直线代表了颜色g通道的混合比例 pct.b = pow(st.x,0.5); //直线代表了颜色b通道的混合比例 color = mix(colorA, colorB, pct); // Plot transition lines for each channel color = mix(color,vec3(1.0,0.0,0.0),plot(st,pct.r)); color = mix(color,vec3(0.0,1.0,0.0),plot(st,pct.g)); color = mix(color,vec3(0.0,0.0,1.0),plot(st,pct.b)); gl_FragColor = vec4(color,1.0);} HSB HSB代表色相、饱和度和亮度（或值），是一种更直观、更有用的颜色组织.将x坐标（位置）映射到Hue值并将y坐标映射到明度，我们就得到了五彩的可见光光谱。这样的色彩空间分布实现起来非常方便，比起RGB，用HSB来拾取颜色更直观. 12345678910111213141516171819202122232425262728293031323334353637383940414243#ifdef GL_ESprecision mediump float;#endifuniform vec2 u_resolution;uniform float u_time;vec3 rgb2hsb( in vec3 c ){ vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0); vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g)); vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r)); float d = q.x - min(q.w, q.y); float e = 1.0e-10; return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);}// Function from Iñigo Quiles// https://www.shadertoy.com/view/MsS3Wcvec3 hsb2rgb( in vec3 c ){ vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0), 6.0)-3.0)-1.0, 0.0, 1.0 ); rgb = rgb*rgb*(3.0-2.0*rgb); return c.z * mix(vec3(1.0), rgb, c.y);}void main(){ vec2 st = gl_FragCoord.xy/u_resolution; vec3 color = vec3(0.0); // We map x (0.0 - 1.0) to the hue (0.0 - 1.0) // And the y (0.0 - 1.0) to the brightness color = hsb2rgb(vec3(st.x,1.0,st.y)); gl_FragColor = vec4(color,1.0);} to be continued ….","link":"/2023/12/08/The-Book-of-Shaders-Notes/"}],"tags":[{"name":"GamePhotography","slug":"GamePhotography","link":"/tags/GamePhotography/"},{"name":"摄影","slug":"摄影","link":"/tags/%E6%91%84%E5%BD%B1/"},{"name":"Technical Art","slug":"Technical-Art","link":"/tags/Technical-Art/"},{"name":"Fragment Shaders","slug":"Fragment-Shaders","link":"/tags/Fragment-Shaders/"}],"categories":[{"name":"GamePhotography","slug":"GamePhotography","link":"/categories/GamePhotography/"},{"name":"Daily","slug":"Daily","link":"/categories/Daily/"},{"name":"Technical Art","slug":"Technical-Art","link":"/categories/Technical-Art/"},{"name":"Fragment Shaders","slug":"Fragment-Shaders","link":"/categories/Fragment-Shaders/"}],"pages":[{"title":"","text":"Live life to the fullest, and focus on the positive.","link":"/about/index.html"},{"title":"","text":"","link":"/photo/index.html"},{"title":"links","text":".links-content{ margin-top:1rem; } .link-navigation::after { content: \" \"; display: block; clear: both; } .card { width: 100%; font-size: 1rem; padding: 10px 20px; border-radius: 4px; transition-duration: 0.15s; margin-bottom: 1rem; display:flex; } .card:nth-child(odd) { float: left; } /* .card:nth-child(even) { float: right; }*/ /* .card:hover { transform: scale(1.1); box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04); }*/ .card a { border:none; } .card .ava { width: 3rem!important; height: 3rem!important; margin:0!important; margin-right: 1em!important; border-radius:4px; } .card .card-header { font-style: italic; overflow: hidden; width: 100%; } .card .card-header a { font-style: normal; color: #2bbc8a; font-weight: bold; text-decoration: none; } .card .card-header a:hover { color: #d480aa; text-decoration: none; } .card .card-header .info { font-style:normal; color:#a3a3a3; font-size:14px; min-width: 0; overflow: hidden; white-space: nowrap; } Shilin's Blog Shilin's Blog 西木野羰基 Karuboniru's Blog 交换友链，请添加本站友链后 下方留言申请，期望您的站点: 独立博客(不要求独立域名)，https，访问流畅 原创内容为主，原创内容2篇以上 处于活跃状态，有一定的更新频率 未添加友链或申请未通过，评论留言会被隐藏 网站不可访问或取消本站链接，将被自动清除 友链格式示例（本站友链信息）: 名称: Shilin’s Blog链接: https://blog.zhushilin.top/头像: https://s2.loli.net/2023/12/02/qJOcy8vunMlrdPG.png简介: 分享和搜集有趣前沿的游戏和技术美术内容","link":"/links/index.html"}]}